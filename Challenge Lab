************************************************************************************************************************************************************************
                        -------------------Set up and Configure a Cloud Environment in Google Cloud: Challenge Lab:--------------
*************************************************************************************************************************************************************************

---------------------------------------------------------------------------------------------------------
|                                      Task 1: Create development VPC manually                          |
----------------------------------------------------------------------------------------------------------

#In the Cloud Console, navigate to Navigation menu (mainmenu.png) > VPC network > VPC networks.

Create a VPC called griffin-dev-vpc with the following subnets only:

Name : griffin-dev-wp
Region : us-east1
IP address : 192.168.16.0/20

Name : griffin-dev-mgmt
Region  : us-east1
IP address : 192.168.32.0/20



--------------------------------------------------------------------------------------------------------------
|                                     Task 2: Create production VPC using Deployment Manager                 |
--------------------------------------------------------------------------------------------------------------

#run this below command on cloud shell.

gsutil cp -r gs://cloud-training/gsp321/dm .

cd dm

sed -i s/SET_REGION/us-east1/g prod-network.yaml

gcloud deployment-manager deployments create prod-network \
    --config=prod-network.yaml

cd ..


----------------------------------------------------------------------------------------------------------------
|                                             Task 3: Create bastion host                                      |
----------------------------------------------------------------------------------------------------------------

#You can copy the below three commands at a time and run them on the Cloud shell.

gcloud compute instances create bastion --network-interface=network=griffin-dev-vpc,subnet=griffin-dev-mgmt  --network-interface=network=griffin-prod-vpc,subnet=griffin-prod-mgmt --tags=ssh --zone=us-east1-b

gcloud compute firewall-rules create fw-ssh-dev --source-ranges=0.0.0.0/0 --target-tags ssh --allow=tcp:22 --network=griffin-dev-vpc

gcloud compute firewall-rules create fw-ssh-prod --source-ranges=0.0.0.0/0 --target-tags ssh --allow=tcp:22 --network=griffin-prod-vpc


-----------------------------------------------------------------------------------------------------------------------------------------
|                                         Task 4: Create and configure Cloud SQL Instance                                               |
------------------------------------------------------------------------------------------------------------------------------------------

#run this below command on cloud shell.

gcloud sql instances create griffin-dev-db --root-password password --region=us-east1

gcloud sql connect griffin-dev-db


sql commands :
---------------

CREATE DATABASE wordpress;
GRANT ALL PRIVILEGES ON wordpress.* TO "wp_user"@"%" IDENTIFIED BY "stormwind_rules";
FLUSH PRIVILEGES;



----------------------------------------------------------------------------------------------------------------------------
|                                             Task 5: Create Kubernetes cluster                                            |
----------------------------------------------------------------------------------------------------------------------------

#run this below command on cloud shell.

gcloud container clusters create griffin-dev \
  --network griffin-dev-vpc \
  --subnetwork griffin-dev-wp \
  --machine-type n1-standard-4 \
  --num-nodes 2  \
  --zone us-east1-b


gcloud container clusters get-credentials griffin-dev --zone us-east1-b

cd ~/


----------------------------------------------------------------------------------------------------------------------------
|                                             Task 6: Prepare the Kubernetes cluster                                       |
----------------------------------------------------------------------------------------------------------------------------

#run this below command on cloud shell.

gsutil cp -r gs://cloud-training/gsp321/wp-k8s .

cd wp-k8s

sed -i s/username_goes_here/wp_user/g wp-env.yaml

sed -i s/password_goes_here/stormwind_rules/g wp-env.yaml

kubectl create -f wp-env.yaml

gcloud iam service-accounts keys create key.json --iam-account=cloud-sql-proxy@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com

kubectl create secret generic cloudsql-instance-credentials --from-file key.json


----------------------------------------------------------------------------------------------------------------------------
|                                             Task 7: Create a WordPress deployment                                        |
----------------------------------------------------------------------------------------------------------------------------

#run this below command on cloud shell.

I=$(gcloud sql instances describe griffin-dev-db --format="value(connectionName)")

sed -i s/YOUR_SQL_INSTANCE/$I/g wp-deployment.yaml

kubectl create -f wp-deployment.yaml

kubectl create -f wp-service.yaml

Check wordpress website :

#In the Cloud Console, navigate to Navigation menu (mainmenu.png) > kubernetes Engine > workloads > click on name wordpress
> scroll down n see exposing services and click on endpoints(external IP)

----------------------------------------------------------------------------------------------------------------------------
|                                             Task 8: Enable monitoring                                                     |
----------------------------------------------------------------------------------------------------------------------------

#In the Cloud Console, navigate to Navigation menu (mainmenu.png) > montioring > uptime check > create uptime check

Name : WordPress check

click Next

Target :
protocol:HTTP
Resource Type: url
Hostname:(check your wordpress site-ip addresss and copy the address)
path: /

click next > next > next

TEST.

Create.


----------------------------------------------------------------------------------------------------------------------------
|                                             Task 9: Provide access for an additional engineer                            |
----------------------------------------------------------------------------------------------------------------------------

#In the Cloud Console, navigate to Navigation menu (mainmenu.png) > IAM & admin > IAM > add members

Name : copy student2 id and paste
select role : all roles-editor

save.

-----------------------**************************************Complete the challenge***********************************---------------------------------------------------


